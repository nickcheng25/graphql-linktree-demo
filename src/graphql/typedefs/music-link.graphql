scalar DateTime
interface Music {
    title: String! @constraint(maxLength: 144)
    link: String! @constraint(format: "uri")
    userId: String! @constraint(format: "uuid")
    dateCreated: DateTime!
    platformPartners: [PlatformPartner!]
}

type MusicLink implements Music {
    id: ID!
    # implements Link
    title: String! @constraint(maxLength: 144)
    link: String! @constraint(format: "uri")
    userId: String! @constraint(format: "uuid")
    dateCreated: DateTime!
    platformPartners: [PlatformPartner!]
}

type PlatformPartner {
    platformLink: String! @constraint(format: "uri")
    embeddedAudio: String @constraint(pattern: "^<iframe.*</iframe>$")
    # @todo better validation that this is an embedded audio link
    # @todo I actually don't like the idea of the client having to pass in the embedded audio html, maybe we should just pass the platform link and the backend can handle the business logic of creating the embedded audio play experience
}

input MusicLinkInput {
    title: String! @constraint(maxLength: 144)
    link: String! @constraint(format: "uri")
    userId: String! @constraint(format: "uuid")
    platformPartners: [PlatformPartnerInput]
}

input PlatformPartnerInput {
    platformLink: String!
    embeddedAudio: String
}

input UpdateMusicLinkInput {
    id: ID!
    title: String @constraint(maxLength: 144)
    link: String @constraint(format: "uri")
    platformPartners: [PlatformPartnerInput]
}